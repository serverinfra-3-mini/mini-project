# roles/docker_swarm_setup/tasks/main.yml
---
# ============================================
# Task for Master Node
# ============================================
- name: Initialize Docker Swarm on master node
  community.docker.docker_swarm:
    state: present
    advertise_addr: "{{ hostvars[inventory_hostname]['ansible_host'] }}" # 마스터 노드의 IP 사용
  when: inventory_hostname == groups['master'][0]
  tags: swarm_setup

- name: Get Docker Swarm worker join token
  ansible.builtin.command: docker swarm join-token worker -q
  register: docker_swarm_worker_token_result
  when: inventory_hostname == groups['master'][0]
  tags: swarm_setup

- name: Set worker join command as fact
  ansible.builtin.set_fact:
    docker_swarm_worker_join_command: "docker swarm join --token {{ docker_swarm_worker_token_result.stdout }} {{ hostvars[inventory_hostname]['ansible_host'] }}:2377"
  when: inventory_hostname == groups['master'][0]
  tags: swarm_setup

# ============================================
# Tasks for Worker Nodes
# ============================================
- name: Join worker node to Docker Swarm cluster
  ansible.builtin.command: "{{ hostvars[groups['master'][0]]['docker_swarm_worker_join_command'] }}"
  args:
    creates: /var/lib/docker/swarm # 이미 join되어 있으면 이 파일이 생성되므로 다시 시도하지 않음
  when: inventory_hostname in groups['worker']
  tags: swarm_setup

# 선택 사항: 매니저 노드를 클러스터에 추가
# - name: Get Docker Swarm manager join token
#   ansible.builtin.command: docker swarm join-token manager -q
#   register: docker_swarm_manager_token_result
#   when: inventory_hostname == groups['master'][0]

# - name: Join other manager nodes to Docker Swarm cluster
#   ansible.builtin.command: "docker swarm join --token {{ docker_swarm_manager_token_result.stdout }} {{ hostvars[groups['master'][0]]['ansible_host'] }}:2377"
#   when: inventory_hostname in groups['master'][1:]
