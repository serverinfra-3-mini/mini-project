---
- name: generate SSH key on Ansible controller
  hosts: localhost         # 이 롤은 컨트롤 노드(자신)에서 실행됩니다.
  connection: local      # 로컬에서 실행합니다.
  become: no             # 키 생성은 일반적으로 현재 사용자 권한으로 수행됩니다.

  vars:
    # 필요한 경우 여기에 키 경로와 비밀번호를 재정의할 수 있습니다.
    # ssh_key_path: "~/.ssh/my_custom_ansible_key"
    # ssh_key_passphrase: "my_secret_passphrase"

  roles:
    - ssh_key_generator    # 위에서 정의한 롤을 호출합니다.
- name: deploy SSH public key to managed nodes
  hosts: all                     # inventory.ini에 정의된 모든 호스트 (master, worker 그룹 포함)
  # ansible.cfg에 remote_user=root로 설정되어 있으므로, root 권한으로 실행됩니다.
  # 만약 첫 접속이라면, 다음처럼 --ask-pass (-k) 옵션을 사용하여 비밀번호를 입력해야 합니다.
  # ansible-playbook playbook_deploy_ssh_key.yml -k

  vars:
    # 롤 기본값 외에 다른 값을 사용하고 싶다면 여기서 재정의할 수 있습니다.
    # deploy_public_key_path: "/path/to/another/key.pub"
    # deploy_target_user_on_remote: "myuser"

  roles:
    - deploy_ssh_key             # 위에서 정의한 롤을 호출합니다.
- name: Prepare all nodes (Docker Install & System Security)
  hosts: master, worker
  gather_facts: yes # ansible_host, ansible_nodename 등 정보를 수집
  become: yes

  roles:
    - role: docker_install
      tags: docker

    - role: system_security_setup
      tags: security

  # =========================================================================
  # 중요: Firewalld 변경사항을 Docker 데몬에 반영하기 위해 반드시 Docker 재시작
  # =========================================================================
  tasks:
    - name: Flush handlers to ensure firewalld reload completes
      ansible.builtin.meta: flush_handlers
      tags: always

    - name: Restart Docker service after firewalld configuration
      ansible.builtin.systemd:
        name: docker
        state: restarted
        daemon_reload: yes
      tags: docker, security # 이 태그를 통해 docker 또는 security 관련 작업을 할 때 포함 가능
      # 이 태스크는 모든 노드에 적용됩니다. (마스터, 워커)

- name: Setup Docker Swarm cluster
  hosts: master, worker
  gather_facts: false # 위에서 이미 수집했으므로 다시 할 필요 없음
  become: yes

  roles:
    - role: docker_swarm_setup
      tags: swarm
