# playbook_deploy_wordpress.yml
---
- name: Deploy WordPress to Docker Swarm Cluster
  hosts: manager # Docker Swarm 스택 배포는 마스터 노드에서만 실행합니다.
  become: yes   # Docker 명령 실행을 위해 root 권한이 필요할 수 있습니다.
  gather_facts: no # 이 플레이북은 팩트 수집이 필요 없을 수 있습니다.

  vars:
    # 컨트롤 노드의 현재 디렉토리에 있는 wordpress-stack.yml 파일의 경로입니다.
    local_wordpress_stack_file: "{{ lookup('pipe', 'pwd') }}/wordpress-stack.yml"
    # 마스터 노드에 파일을 복사할 임시 경로
    remote_wordpress_stack_path: "/tmp/wordpress-stack.yml"
    # 배포될 스택의 이름
    wordpress_stack_name: "my-wordpress-blog"

  tasks:
    - name: Check if wordpress-stack.yml exists on controller
      ansible.builtin.stat:
        path: "{{ local_wordpress_stack_file }}"
      register: wordpress_stack_file_status
      delegate_to: localhost

    - name: Fail if wordpress-stack.yml does not exist
      ansible.builtin.fail:
        msg: "wordpress-stack.yml file not found at {{ local_wordpress_stack_file }}. Please ensure it exists."
      when: not wordpress_stack_file_status.stat.exists
      delegate_to: localhost

    - name: Copy wordpress-stack.yml to the master node
      ansible.builtin.copy:
        src: "{{ local_wordpress_stack_file }}"
        dest: "{{ remote_wordpress_stack_path }}"
        mode: '0644'

    - name: Deploy WordPress stack on the master node
      ansible.builtin.command: >
        docker stack deploy -c {{ remote_wordpress_stack_path }} {{ wordpress_stack_name }}
      register: wordpress_deploy_result
      changed_when: wordpress_deploy_result.rc == 0 # 명령 실행 성공 시 changed

    - name: Display WordPress stack deployment result
      ansible.builtin.debug:
        var: wordpress_deploy_result.stdout_lines
